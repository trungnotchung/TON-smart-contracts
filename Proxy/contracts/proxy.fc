#include "imports/stdlib.fc";

int equal_slices (slice a, slice b) asm "SDEQ";

slice load_owner_address() inline {
    slice cs = get_data().begin_parse();
    return cs~load_msg_addr();
}

slice load_sender_address(cell in_msg_full) inline {
    slice cs = in_msg_full.begin_parse();
    var flag = cs~load_uint(4);
    slice sender_address = cs~load_msg_addr();
    return sender_address;
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    slice owner_address = load_owner_address();
    slice sender_address = load_sender_address(in_msg_full);

    if ~ equal_slices(owner_address, sender_address) {
        cell msg_body_cell = begin_cell().store_slice(in_msg_body).end_cell();

        var msg = begin_cell()
            .store_uint(0x10, 6)
            .store_slice(owner_address)
            .store_grams(0)
            .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
            .store_slice(sender_address)
            .store_ref(msg_body_cell)
            .end_cell();
        send_raw_message(msg, 64);
    }

    
}
